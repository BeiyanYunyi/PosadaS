generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id      Int    @id @default(autoincrement())
  userKey String @unique
  tier    Int    @default(1)
}

model dbVersion {
  dbVersion Int @id
}

model image {
  id         BigInt @id @default(autoincrement())
  imgID      String @unique(map: "image_imgid_unique") @db.VarChar(255)
  imgContent Bytes

  @@index([imgID], map: "image_img_i_d")
  @@index([imgID], map: "image_imgid_index")
}

model reply {
  replyID           String   @id(map: "replyID")
  topicID           String?
  authorID          String?
  authorName        String?
  isPoster          Boolean?
  replyTime         BigInt?
  quoting           Boolean?
  quotingImage      String?
  quotingText       String?
  quotingAuthorID   String?
  quotingAuthorName String?
  image             String?
  content           String?
  votes             Int?     @default(0)

  @@index([replyTime], map: "idx_38486_replytime")
  @@index([replyTime], map: "reply_reply_time")
}

model topicList {
  title         String?
  authorID      String?
  authorName    String?
  reply         Int?
  lastReplyTime BigInt?
  topicID       String   @id @unique(map: "idx_16976_sqlite_autoindex_topiclist_1")
  isElite       Boolean?
  content       String?
  lastFetchTime BigInt?
  createTime    BigInt?
  deleteTime    BigInt?

  @@index([lastReplyTime], map: "idx_16976_lastreplytime")
  @@index([lastReplyTime], map: "topic_list_last_reply_time")
}

model user {
  id             String   @id @db.VarChar(36)
  username       String?  @unique
  nickname       String?
  password       String?
  avatar         String?
  lastRevokeTime BigInt?
  isVerified     Boolean? @default(false)

  @@index([id], map: "user_id_index")
  @@index([username], map: "user_username")
  @@index([username], map: "user_username_index")
}
